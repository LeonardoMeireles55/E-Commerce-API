version: '3.8'

services:
  postgres-db:
    image: postgres:15
    restart: always
    env_file: ./.env
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_LOCAL_PORT}:${POSTGRES_DOCKER_PORT}"
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DATABASE}", "-h", "localhost", "-p", "${POSTGRES_DOCKER_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - ecommerce-backend-app
  ecommerce-backend-app:
    restart: on-failure
    build:
      context: ./
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    container_name: e-commerce-API
    env_file: ./.env
    ports:
      - "${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:${POSTGRES_DOCKER_PORT}/${POSTGRES_DATABASE}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    stdin_open: true
    tty: true
    expose:
      - 8080:8080
volumes:
  pg-data: {}
